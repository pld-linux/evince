--- evince-3.36.5/backend/dvi/mdvi-lib/sysdeps.h.orig	2017-10-03 20:15:33.000000000 +0200
+++ evince-3.36.5/backend/dvi/mdvi-lib/sysdeps.h	2020-06-16 17:20:53.413539122 +0200
@@ -45,10 +45,12 @@
 #if SIZEOF_LONG == 4
 typedef unsigned long	Uint32;
 typedef long		Int32;
+#define PRIInt32 "ld"
 #else	/* SIZEOF_LONG != 4 */
 #if SIZEOF_INT == 4
 typedef unsigned int	Uint32;
 typedef int		Int32;
+#define PRIInt32 "d"
 #else	/* SIZEOF_INT != 4 */
 #ifdef __cplusplus
 #include "No.appropriate.32bit.native.type.found.Fix.sysdeps.h"
--- evince-3.36.5/backend/dvi/mdvi-lib/dviread.c.orig	2020-06-11 13:59:00.000000000 +0200
+++ evince-3.36.5/backend/dvi/mdvi-lib/dviread.c	2020-06-16 17:30:50.300305509 +0200
@@ -1287,7 +1287,7 @@
 	} else {
 		h = dvi->pos.h + ch->tfmwidth;
 		hh = dvi->pos.hh + pixel_round(dvi, ch->tfmwidth);
-		SHOWCMD((dvi, "setchar", num, "(%d,%d) h:=%d%c%d=%d, hh:=%d (%s)\n",
+		SHOWCMD((dvi, "setchar", num, "(%d,%d) h:=%d%c%"PRIInt32"=%d, hh:=%d (%s)\n",
 			dvi->pos.hh, dvi->pos.vv,
 			DBGSUM(dvi->pos.h, ch->tfmwidth, h), hh,
 			font->fontname));
@@ -1309,7 +1309,7 @@
 	if(a > 0 && b > 0) {
 		h = vrule_round(dvi, a); 
 		SHOWCMD((dvi, opcode == DVI_SET_RULE ? "setrule" : "putrule", -1,
-			"width %d, height %d (%dx%d pixels)\n",
+			"width %"PRIInt32", height %"PRIInt32" (%dx%d pixels)\n",
 			b, a, w, h));
 		/* the `draw' functions expect the origin to be at the top left
 		 * corner of the rule, not the bottom left, as in DVI files */
@@ -1319,7 +1319,7 @@
 		}
 	} else { 
 		SHOWCMD((dvi, opcode == DVI_SET_RULE ? "setrule" : "putrule", -1,
-			"(moving left only, by %d)\n", b));
+			"(moving left only, by %"PRIInt32")\n", b));
 	}
 			
 	if(opcode == DVI_SET_RULE) {
@@ -1380,7 +1380,7 @@
 	h = dvi->pos.h;
 	hh = move_horizontal(dvi, arg);
 	SHOWCMD((dvi, "right", opcode - DVI_RIGHT1 + 1,
-		"%d h:=%d%c%d=%d, hh:=%d\n",
+		"%"PRIInt32" h:=%d%c%"PRIInt32"=%d, hh:=%d\n",
 		arg, DBGSUM(h, arg, dvi->pos.h), hh));
 	dvi->pos.hh = hh;
 	return 0;
@@ -1395,7 +1395,7 @@
 	v = dvi->pos.v;
 	vv = move_vertical(dvi, arg);
 	SHOWCMD((dvi, "down", opcode - DVI_DOWN1 + 1,
-		"%d v:=%d%c%d=%d, vv:=%d\n",
+		"%"PRIInt32" v:=%d%c%"PRIInt32"=%d, vv:=%d\n",
 		arg, DBGSUM(v, arg, dvi->pos.v), vv));
 	dvi->pos.vv = vv;
 	return 0;
@@ -1494,11 +1494,11 @@
 	else
 		ref = dvi->findref(dvi, arg);
 	if(ref == NULL) {
-		dvierr(dvi, _("font %d is not defined\n"), arg);
+		dvierr(dvi, _("font %"PRIInt32" is not defined\n"), arg);
 		return -1;
 	}
 	SHOWCMD((dvi, "fnt", opcode - DVI_FNT1 + 1,
-		"current font is %s (id %d)\n", 
+		"current font is %s (id %"PRIInt32")\n", 
 		ref->ref->fontname, arg));
 	dvi->currfont = ref;
 	return 0;
@@ -1538,11 +1538,11 @@
 	dskip(dvi, 12);
 	dskip(dvi, duget1(dvi) + duget1(dvi));
 	if(ref == NULL) {
-		dvierr(dvi, _("font %d is not defined in postamble\n"), arg);
+		dvierr(dvi, _("font %"PRIInt32" is not defined in postamble\n"), arg);
 		return -1;
 	}
 	SHOWCMD((dvi, "fntdef", opcode - DVI_FNT_DEF1 + 1,
-		"%d -> %s (%d links)\n",
+		"%"PRIInt32" -> %s (%d links)\n",
 		ref->fontid, ref->ref->fontname,
 		ref->ref->links));
 	return 0;
